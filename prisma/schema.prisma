generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "foreignKeys"
}

model User {
  id        String  @id
  username  String
  avatarUrl String? @map("avatar_url")

  guildMembers GuildMember[]
  activities   Activity[]

  @@map("user")
}

model Activity {
  id        String    @id @default(uuid())
  userId    String    @map("user_id")
  type      Int
  name      String
  iconUrl   String?   @map("icon_url")
  startTime DateTime  @default(now()) @map("start_time")
  endTime   DateTime? @map("end_time")

  user User @relation(fields: [userId], references: [id])

  @@map("activity")
}

model Guild {
  id        String   @id
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  iconUrl   String?  @map("icon_url")

  guildMembers  GuildMember[]
  voiceChannels VoiceChannel[]
  textChannels  TextChannel[]

  @@map("guild")
}

model GuildMember {
  id       String   @id @default(uuid())
  guildId  String   @map("guild_id")
  userId   String   @map("user_id")
  joinedAt DateTime @map("joined_at")
  nickname String?

  user        User         @relation(fields: [userId], references: [id])
  guild       Guild        @relation(fields: [guildId], references: [id])
  connections Connection[]
  messages    Message[]

  @@unique([guildId, userId])
  @@map("guild_member")
}

model VoiceChannel {
  id      String @id
  name    String
  guildId String @map("guild_id")

  guild       Guild        @relation(fields: [guildId], references: [id])
  connections Connection[]

  @@map("voice_channel")
}

model Connection {
  id             String    @id @default(uuid())
  guildMemberId  String    @map("guild_member_id")
  voiceChannelId String    @map("voice_channel_id")
  startTime      DateTime  @default(now()) @map("start_time")
  endTime        DateTime? @map("end_time")

  voiceChannel VoiceChannel @relation(fields: [voiceChannelId], references: [id])
  guildMember  GuildMember  @relation(fields: [guildMemberId], references: [id])

  @@map("connection")
}

model TextChannel {
  id      String @id
  name    String
  guildId String @map("guild_id")

  guild    Guild     @relation(fields: [guildId], references: [id])
  messages Message[]

  @@map("text_channel")
}

model Message {
  id            String   @id @default(uuid())
  textChannelId String   @map("text_channel_id")
  guildMemberId String   @map("guild_member_id")
  sentAt        DateTime @default(now()) @map("sent_at")

  textChannel TextChannel @relation(fields: [textChannelId], references: [id])
  guildMember GuildMember @relation(fields: [guildMemberId], references: [id])

  @@map("message")
}
