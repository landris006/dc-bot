generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "foreignKeys"
}

model User {
  id        String  @id
  username  String
  avatarURL String?

  guildMembers GuildMember[]
}

model Guild {
  id        String   @id
  name      String
  createdAt DateTime @default(now())
  iconURL   String?

  guildMembers  GuildMember[]
  voiceChannels VoiceChannel[]
  textChannels  TextChannel[]
}

model GuildMember {
  id       String   @id @default(uuid())
  guildID  String
  userID   String
  joinedAt DateTime
  nickname String?

  user        User         @relation(fields: [userID], references: [id])
  guild       Guild        @relation(fields: [guildID], references: [id])
  connections Connection[]
  messages    Message[]

  @@unique([guildID, userID])
}

model VoiceChannel {
  id      String @id
  name    String
  guildID String

  guild       Guild        @relation(fields: [guildID], references: [id])
  connections Connection[]
}

model Connection {
  id             String    @id @default(uuid())
  guildMemberID  String
  voiceChannelID String
  startTime      DateTime  @default(now())
  endTime        DateTime?

  voiceChannel VoiceChannel @relation(fields: [voiceChannelID], references: [id])
  guildMember  GuildMember  @relation(fields: [guildMemberID], references: [id])
}

model TextChannel {
  id      String @id
  name    String
  guildID String

  guild    Guild     @relation(fields: [guildID], references: [id])
  messages Message[]
}

model Message {
  id            String   @id @default(uuid())
  textChannelID String
  guildMemberID String
  sentAt        DateTime @default(now())

  textChannel TextChannel @relation(fields: [textChannelID], references: [id])
  guildMember GuildMember @relation(fields: [guildMemberID], references: [id])
}
